(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{484:function(e,t,a){"use strict";a.r(t);var o=a(56),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"foreword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreword"}},[e._v("#")]),e._v(" Foreword")]),e._v(" "),a("p",[e._v("It is hard to believe that 3 years has already passed since the OpenCL 1.0 specification was announced. More and more multi-core processors are being introduced by the day, with no signs of dwindling momentum. NVIDIA's Fermi and Tegra, AMD's Fusion and Graphics Core Next, Intel's Sandy Bridge and Many Integrated Core (MIC), and IBM's POWER7 are some examples. Even smaller vendors such as Tilera and Adapteva have entered the market with their energy-efficient, high-performance multi-core processors. As far as software development is concerned, however, despite the research efforts in automatic parallelization and virtualization, no technology is in the horizon that will prevent programmers from having to write architecture-dependent, explicitly parallelized code. Although many chip vendors have released parallel-programming platforms independently, such as NVIDIA's CUDA, AMD's APP SDK, and Intel's ArBB, they also support OpenCL for cross-platform portability, leading us to believe that OpenCL is slowly but steadily becoming the standard for multi-core programming.")]),e._v(" "),a("p",[e._v("In the world of software development, the demand for OpenCL projects is increasing by the day. Our company, Fixstars Corporations, specializes in multi-core programming, and our programmers are commonly left with no other choice than to choose OpenCL since multi-platform execution is often mandatory. This all thanks to the fact that many chip vendors have decided to support OpenCL for their hardware devices. As long as OpenCL is supported, any new processor can be used without having to change the code, or at most with minimal changes. Software asset in a highly portable language increases competitiveness in the present and is a risk hedge for the future.")]),e._v(" "),a("p",[e._v("So, is OpenCL going be the standard platform for the ongoing multi-core era? Perhaps it is meaningless to predict what the future holds in this rapidly-advancing field, but as long as processor vendors continue with their innovations, and as long as an auto-parallelization compiler that optimizes any code to any architecture does not become a reality, the most probable option for a standard to conform to will be one from a highly reputable standard organization like Khronos. In other words, what else other than OpenCL?")]),e._v(" "),a("p",[e._v("January 2012 "),a("br"),e._v("\nCEO, Fixstars Corporation "),a("br"),e._v("\nSatoshi Miki")]),e._v(" "),a("p",[e._v("OpenCL is an exciting new open standard that is bringing the power of programming complex multi-processor systems to a much wider audience than ever before. Khronos is fully committed not only to creating the specification but also fostering a rich and diverse OpenCL ecosystem. A vital piece of any living standard is enabling the industry to understand it truly, letting it tap into the full potential power of the technology. Fixstars is a skilled OpenCL practitioner and is ideally qualified to create state-of-the-art OpenCL educational materials. I recommend wholeheartedly this book to anyone seeking to understand and start using the amazing power of OpenCL.")]),e._v(" "),a("p",[e._v("Neil Trevett "),a("br"),e._v("\nPresident, The Khronos Group")])])}),[],!1,null,null,null);t.default=n.exports}}]);